#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

module AAXValResult
  # forward declarations
  class DataTree < ::ProtocolBuffers::Message; end
  class Result < ::ProtocolBuffers::Message; end
  class SingleTestResult < ::ProtocolBuffers::Message; end
  class Summary < ::ProtocolBuffers::Message; end

  # enums
  module EResultStatus
    include ::ProtocolBuffers::Enum

    set_fully_qualified_name "AAXValResult.EResultStatus"

    E_RESULTSTATUS_UNKNOWN = 0
    E_COMPLETED_PASS = 1
    E_COMPLETED_FAIL = 2
    E_LOST = 4
    E_TIMEOUT = 5
    E_ABORTED = 6
    E_CANCELED = 7
  end

  class DataTree < ::ProtocolBuffers::Message
    set_fully_qualified_name "AAXValResult.DataTree"

    optional :string, :data, 1
    repeated ::AAXValResult::DataTree, :tree, 2
  end

  class Result < ::ProtocolBuffers::Message
    set_fully_qualified_name "AAXValResult.Result"

    repeated ::AAXValResult::SingleTestResult, :result, 1
    optional ::AAXValResult::Summary, :summary, 2
    optional ::AAXValResult::EResultStatus, :result_status, 3, :default => ::AAXValResult::EResultStatus::E_RESULTSTATUS_UNKNOWN
    optional :uint64, :connection_id, 4
  end

  class SingleTestResult < ::ProtocolBuffers::Message
    # forward declarations
    class Triad < ::ProtocolBuffers::Message; end
    class TestConfig < ::ProtocolBuffers::Message; end
    class PerformanceData < ::ProtocolBuffers::Message; end

    set_fully_qualified_name "AAXValResult.SingleTestResult"

    # nested messages
    class Triad < ::ProtocolBuffers::Message
      set_fully_qualified_name "AAXValResult.SingleTestResult.Triad"

      required :uint32, :manufacture_id, 1
      required :uint32, :product_id, 2
      required :uint32, :plugin_id, 3
    end

    class TestConfig < ::ProtocolBuffers::Message
      set_fully_qualified_name "AAXValResult.SingleTestResult.TestConfig"

      repeated ::AAXValResult::DataTree, :tree, 1
    end

    class PerformanceData < ::ProtocolBuffers::Message
      set_fully_qualified_name "AAXValResult.SingleTestResult.PerformanceData"

      optional :float, :started_wall_clock_sec, 1
      optional :float, :elapsed_time_sec, 2
      optional :float, :average_ms_per_iteration, 3
      optional :float, :max_ms_per_iteration, 4
      optional :float, :cpu_usage, 7
      optional :float, :mem_usage, 8
    end

    optional :string, :effect_id, 1
    optional ::AAXValResult::SingleTestResult::Triad, :triad_id, 2
    optional ::AAXValResult::SingleTestResult::TestConfig, :test_config, 3
    optional :float, :score, 5
    optional ::AAXValResult::SingleTestResult::PerformanceData, :performance_data, 6
    repeated :string, :logs, 9
    repeated ::AAXValResult::DataTree, :tree, 10
  end

  class Summary < ::ProtocolBuffers::Message
    set_fully_qualified_name "AAXValResult.Summary"

    optional :sint32, :total, 1
    optional :sint32, :failed, 2
    optional :sint32, :successful, 3
    optional :sint32, :not_run, 5
  end

end
